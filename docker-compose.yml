version: '3.7'

services:
  db:
    image: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - pgdata:/var/lib/postgresql/data/
  django:
    build:
      context: ./server
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./server:/code
    ports:
      - 8000:8000
    depends_on:
      - db
  react:
    build:
      context: ./client
      dockerfile: Dockerfile
    volumes:
      - ./client/:/code
    ports:
      - 80:80
    depends_on:
      - django
    tty: true
  local-client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    volumes:
      - ./client/:/code
    ports:
      - 3000:3000
    depends_on:
      - django
    tty: true
  nginx:
    image: nginx:1.15-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
  entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"


volumes:
  pgdata: