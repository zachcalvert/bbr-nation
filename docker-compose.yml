version: '3.7'

services:
  db:
    image: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - pgdata:/var/lib/postgresql/data/
  django:
    build:
      context: ./server
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./server:/code
    ports:
      - 8000:8000
    depends_on:
      - db
    networks:
      - app-network
  react:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    volumes:
      - ./client/:/code
    ports:
      - 3000:3000
    depends_on:
      - django
    tty: true
    networks:
      - app-network
  nginx:
    image: nginx:mainline-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - web-root:/var/www/html
      - ./nginx:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - react
    networks:
      - app-network
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - nginx
    command: certonly --webroot --webroot-path=/var/www/html --email zacharym.calvert@gmail.com --agree-tos --no-eff-email --staging -d bbrnation.com  -d www.bbrnation.com

volumes:
  pgdata:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /dev/bbrnation/client/
      o: bind

networks:
  app-network:
    driver: bridge